/* (C) 2021 DragonSkulle */
package org.dragonskulle.core;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.assertTrue;

import org.dragonskulle.components.Transform;
import org.dragonskulle.components.Transform3D;
import org.joml.Matrix4f;
import org.joml.Quaternionf;
import org.joml.Vector3f;
import org.junit.Test;

// The below tests were generated by https://www.diffblue.com/

public class DiffBlueTemplateManagerTest {
    @Test
    public void testInstantiate() {
        assertNull((new TemplateManager()).instantiate(1));
        assertNull((new TemplateManager()).instantiate(-1));
    }

    @Test
    public void testInstantiate2() {
        TemplateManager templateManager = new TemplateManager();
        templateManager.addObject(new GameObject("Name"));
        GameObject actualInstantiateResult = templateManager.instantiate(0);
        assertTrue(actualInstantiateResult.getChildren().isEmpty());
        assertTrue(actualInstantiateResult.isRootObject());
        assertTrue(actualInstantiateResult.isEnabled());
        Transform transform = actualInstantiateResult.getTransform();
        assertTrue(transform instanceof Transform3D);
        assertNull(actualInstantiateResult.getRoot());
        assertTrue(actualInstantiateResult.getComponents().isEmpty());
        assertEquals("Name", actualInstantiateResult.getName());
        assertEquals(0, actualInstantiateResult.getDepth());
        assertTrue(transform.isEnabled());
        assertFalse(transform.isStarted());
        assertTrue(transform.getInvWorldMatrix() instanceof Matrix4f);
        assertSame(actualInstantiateResult, actualInstantiateResult.getReference().get());
        assertTrue(((Transform3D) transform).getLocalForward() instanceof Vector3f);
        assertEquals(transform.getMatrixForChildren(), ((Transform3D) transform).getLocalMatrix());
        assertFalse(transform.isAwake());
        assertEquals(1.0f, ((Vector3f) ((Transform3D) transform).getLocalScale()).z, 0.0f);
        assertEquals(1.0f, ((Vector3f) ((Transform3D) transform).getLocalScale()).y, 0.0f);
        assertEquals(1.0f, ((Vector3f) ((Transform3D) transform).getLocalScale()).x, 0.0f);
        assertEquals(Float.NaN, ((Transform3D) transform).getLocalRotationAngles().y, 0.0f);
        assertEquals(1.0f, transform.getForwardVector().y, 0.0f);
        assertEquals(0.0f, ((Quaternionf) ((Transform3D) transform).getLocalRotation()).y, 0.0f);
        assertEquals(0.0f, ((Quaternionf) ((Transform3D) transform).getLocalRotation()).x, 0.0f);
        assertEquals(1.0f, ((Quaternionf) ((Transform3D) transform).getLocalRotation()).w, 0.0f);
        assertEquals(0.0f, ((Vector3f) ((Transform3D) transform).getLocalPosition()).y, 0.0f);
        assertEquals(0.0f, ((Vector3f) ((Transform3D) transform).getLocalPosition()).x, 0.0f);
        assertEquals(0.0f, transform.getRotation().y, 0.0f);
        assertEquals(0.0f, transform.getPosition().x, 0.0f);
        assertEquals(0.0f, ((Vector3f) ((Transform3D) transform).getLocalPosition()).z, 0.0f);
        assertEquals(0.0f, ((Quaternionf) ((Transform3D) transform).getLocalRotation()).z, 0.0f);
    }

    @Test
    public void testFind() {
        assertNull((new TemplateManager()).find("Name"));
    }

    @Test
    public void testAddObject() {
        TemplateManager templateManager = new TemplateManager();
        assertEquals(0, templateManager.addObject(new GameObject("Name")).intValue());
    }

    @Test
    public void testAddObject2() {
        TemplateManager templateManager = new TemplateManager();
        templateManager.addObject(new GameObject("Name"));
        assertNull(templateManager.addObject(new GameObject("Name")));
    }
}
