/* (C) 2021 DragonSkulle */
package org.dragonskulle.network;

import static org.junit.Assert.assertEquals;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import org.junit.Test;

// The below tests were generated by https://www.diffblue.com/

public class DiffBlueTimeoutInputStreamTest {
    @Test
    public void testRead() throws IOException {
        assertEquals(
                65,
                (new TimeoutInputStream(
                                new ByteArrayInputStream(
                                        "AAAAAAAAAAAAAAAAAAAAAAAA".getBytes("UTF-8")),
                                NetworkConfig.TERMINATE_BYTES_LENGTH))
                        .read());
        assertEquals(
                65,
                (new TimeoutInputStream(
                                new ByteArrayInputStream(
                                        "AAAAAAAAAAAAAAAAAAAAAAAA".getBytes("UTF-8")),
                                0))
                        .read());
    }

    @Test
    public void testRead2() throws IOException {
        TimeoutInputStream timeoutInputStream =
                new TimeoutInputStream(
                        new ByteArrayInputStream("AAAAAAAAAAAAAAAAAAAAAAAA".getBytes("UTF-8")),
                        NetworkConfig.TERMINATE_BYTES_LENGTH);
        assertEquals(24, timeoutInputStream.read("AAAAAAAAAAAAAAAAAAAAAAAA".getBytes("UTF-8")));
    }

    @Test
    public void testRead3() throws IOException {
        TimeoutInputStream timeoutInputStream =
                new TimeoutInputStream(
                        new ByteArrayInputStream("AAAAAAAAAAAAAAAAAAAAAAAA".getBytes("UTF-8")), 0);
        assertEquals(24, timeoutInputStream.read("AAAAAAAAAAAAAAAAAAAAAAAA".getBytes("UTF-8")));
    }

    @Test
    public void testRead4() throws IOException {
        TimeoutInputStream timeoutInputStream =
                new TimeoutInputStream(
                        new ByteArrayInputStream("AAAAAAAAAAAAAAAAAAAAAAAA".getBytes("UTF-8")),
                        NetworkConfig.TERMINATE_BYTES_LENGTH);
        assertEquals(
                3, timeoutInputStream.read("AAAAAAAAAAAAAAAAAAAAAAAA".getBytes("UTF-8"), 1, 3));
    }

    @Test
    public void testRead5() throws IOException {
        TimeoutInputStream timeoutInputStream =
                new TimeoutInputStream(
                        new ByteArrayInputStream("AAAAAAAAAAAAAAAAAAAAAAAA".getBytes("UTF-8")), 0);
        assertEquals(
                3, timeoutInputStream.read("AAAAAAAAAAAAAAAAAAAAAAAA".getBytes("UTF-8"), 1, 3));
    }
}
