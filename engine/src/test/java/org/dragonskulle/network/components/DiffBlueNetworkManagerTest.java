/* (C) 2021 DragonSkulle */
package org.dragonskulle.network.components;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.assertTrue;

import org.dragonskulle.core.GameObject;
import org.dragonskulle.core.TemplateManager;
import org.junit.Test;

// The below tests were generated by https://www.diffblue.com/

public class DiffBlueNetworkManagerTest {
    @Test
    public void testConstructor() {
        NetworkManager actualNetworkManager = new NetworkManager(new TemplateManager(), null);
        assertFalse(actualNetworkManager.isStarted());
        assertTrue(actualNetworkManager.isEnabled());
        assertFalse(actualNetworkManager.isAwake());
        TemplateManager expectedSpawnableTemplates = actualNetworkManager.mSpawnableTemplates;
        assertSame(expectedSpawnableTemplates, actualNetworkManager.getSpawnableTemplates());
        assertNull(actualNetworkManager.getGameSceneBuilder());
        assertSame(actualNetworkManager, actualNetworkManager.getReference().get());
    }

    @Test
    public void testLateNetworkUpdate() {
        NetworkManager networkManager = new NetworkManager(new TemplateManager(), null);
        networkManager.lateNetworkUpdate();
        assertFalse(networkManager.isStarted());
        assertFalse(networkManager.isServer());
        assertTrue(networkManager.isEnabled());
        assertFalse(networkManager.isAwake());
    }

    @Test
    public void testCreateClient() {
        NetworkManager networkManager = new NetworkManager(new TemplateManager(), null);
        networkManager.createClient("127.0.0.1", 8080, null, null, null);
        assertTrue(networkManager.isClient());
        ClientNetworkManager clientManager = networkManager.getClientManager();
        assertEquals(
                ClientNetworkManager.ConnectionState.CONNECTING,
                clientManager.getConnectionState());
        assertTrue(
                clientManager.getDataOut()
                        instanceof org.dragonskulle.network.NetworkMessageStream);
        assertEquals(0.0f, clientManager.getServerTime(), 0.0f);
        assertEquals(-1, clientManager.getNetId());
    }

    @Test
    public void testCreateServer() {
        NetworkManager networkManager = new NetworkManager(new TemplateManager(), null);
        networkManager.createClient("127.0.0.1", 8080, null, null, null);
        networkManager.createServer(8080, null, null, null, null);
        assertFalse(networkManager.isStarted());
        assertFalse(networkManager.isAwake());
        assertFalse(networkManager.isServer());
        assertTrue(networkManager.isEnabled());
        assertTrue(networkManager.isClient());
    }

    @Test
    public void testFindTemplateByName() {
        assertNull((new NetworkManager(new TemplateManager(), null)).findTemplateByName("Name"));
    }

    @Test
    public void testIsServer() {
        assertFalse((new NetworkManager(new TemplateManager(), null)).isServer());
    }

    @Test
    public void testIsClient() {
        assertFalse((new NetworkManager(new TemplateManager(), null)).isClient());
    }

    @Test
    public void testIsClient2() {
        NetworkManager networkManager = new NetworkManager(new TemplateManager(), null);
        networkManager.createClient("127.0.0.1", 8080, null, null, null);
        assertTrue(networkManager.isClient());
    }

    @Test
    public void testGetServerTime() {
        assertEquals(
                -1.0f, (new NetworkManager(new TemplateManager(), null)).getServerTime(), 0.0f);
    }

    @Test
    public void testGetServerTime2() {
        NetworkManager networkManager = new NetworkManager(new TemplateManager(), null);
        networkManager.createClient("127.0.0.1", 8080, null, null, null);
        assertEquals(0.0f, networkManager.getServerTime(), 0.0f);
    }

    @Test
    public void testGetNetworkObjects() {
        assertNull((new NetworkManager(new TemplateManager(), null)).getNetworkObjects());
    }

    @Test
    public void testGetObjectsOwnedBy() {
        assertNull((new NetworkManager(new TemplateManager(), null)).getObjectsOwnedBy(123));
    }

    @Test
    public void testGetObjectById() {
        assertNull((new NetworkManager(new TemplateManager(), null)).getObjectById(123));
    }

    @Test
    public void testGetObjectById2() {
        NetworkManager networkManager = new NetworkManager(new TemplateManager(), null);
        networkManager.createClient("127.0.0.1", 8080, null, null, null);
        assertNull(networkManager.getObjectById(123));
    }

    @Test
    public void testGetIdSingletons() {
        assertNull((new NetworkManager(new TemplateManager(), null)).getIdSingletons(123));
    }

    @Test
    public void testCloseInstance() {
        NetworkManager networkManager = new NetworkManager(new TemplateManager(), null);
        networkManager.closeInstance();
        assertFalse(networkManager.isStarted());
        assertFalse(networkManager.isServer());
        assertTrue(networkManager.isEnabled());
        assertFalse(networkManager.isAwake());
    }

    @Test
    public void testCloseInstance2() {
        NetworkManager networkManager = new NetworkManager(new TemplateManager(), null);
        networkManager.createClient("127.0.0.1", 8080, null, null, null);
        networkManager.closeInstance();
        ClientNetworkManager clientManager = networkManager.getClientManager();
        assertEquals(
                ClientNetworkManager.ConnectionState.NOT_CONNECTED,
                clientManager.getConnectionState());
        assertTrue(
                clientManager.getDataOut()
                        instanceof org.dragonskulle.network.NetworkMessageStream);
    }

    @Test
    public void testCloseInstance3() {
        TemplateManager templateManager = new TemplateManager();
        templateManager.addObject(new GameObject("org.dragonskulle.core.GameObject"));

        NetworkManager networkManager = new NetworkManager(templateManager, null);
        networkManager.createClient("127.0.0.1", 8080, null, null, null);
        networkManager.closeInstance();
        ClientNetworkManager clientManager = networkManager.getClientManager();
        assertEquals(
                ClientNetworkManager.ConnectionState.NOT_CONNECTED,
                clientManager.getConnectionState());
        assertTrue(
                clientManager.getDataOut()
                        instanceof org.dragonskulle.network.NetworkMessageStream);
    }

    @Test
    public void testOnClientDisconnect() {
        NetworkManager networkManager = new NetworkManager(new TemplateManager(), null);
        networkManager.onClientDisconnect();
        assertNull(networkManager.getClientManager());
    }

    @Test
    public void testOnServerDestroy() {
        NetworkManager networkManager = new NetworkManager(new TemplateManager(), null);
        networkManager.onServerDestroy();
        assertFalse(networkManager.isServer());
    }

    @Test
    public void testOnDestroy() {
        NetworkManager networkManager = new NetworkManager(new TemplateManager(), null);
        networkManager.onDestroy();
        assertNull(networkManager.getGameScene());
    }

    @Test
    public void testOnDestroy2() {
        NetworkManager networkManager = new NetworkManager(new TemplateManager(), null);
        networkManager.createClient("127.0.0.1", 8080, null, null, null);
        networkManager.onDestroy();
        assertNull(networkManager.getClientManager());
        assertNull(networkManager.getGameScene());
    }

    @Test
    public void testOnDestroy3() {
        NetworkManager networkManager = new NetworkManager(new TemplateManager(), null);
        networkManager.createClient("", 0, null, null, null);
        networkManager.onDestroy();
        assertNull(networkManager.getClientManager());
        assertNull(networkManager.getGameScene());
    }
}
