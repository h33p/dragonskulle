/* (C) 2021 DragonSkulle */
package org.dragonskulle.renderer;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;

import org.junit.Test;

// The below tests were generated by https://www.diffblue.com/

public class DiffBlueShaderSetTest {
    @Test
    public void testGetVertexShader() {
        assertNull((new ShaderSet()).getVertexShader());
    }

    @Test
    public void testGetGeometryShader() {
        assertNull((new ShaderSet()).getGeometryShader());
    }

    @Test
    public void testGetFragmentShader() {
        assertNull((new ShaderSet()).getFragmentShader());
    }

    @Test
    public void testWriteVertexUniformData() {
        ShaderSet shaderSet = new ShaderSet();
        shaderSet.writeVertexUniformData(2, null);
        assertEquals(0, shaderSet.getFragmentPushConstantSize());
        assertFalse(shaderSet.isVertexUniformDataDirty());
        assertFalse(shaderSet.isPreSort());
        assertFalse(shaderSet.isGeometryUniformDataDirty());
        assertFalse(shaderSet.isFragmentUniformDataDirty());
        assertTrue(shaderSet.isDepthTest());
        assertFalse(shaderSet.isAlphaBlend());
        assertEquals(0, shaderSet.getVertexUniformDataSize());
        assertEquals(0, shaderSet.getVertexAttributeDescriptions().length);
        assertEquals(1000, shaderSet.getRenderOrder());
        assertEquals(0, shaderSet.getNumFragmentTextures());
        assertEquals(0, shaderSet.getLightCount());
        assertEquals(0, shaderSet.getGeometryUniformDataSize());
        assertEquals(0, shaderSet.getFragmentUniformDataSize());
    }

    @Test
    public void testWriteGeometryUniformData() {
        ShaderSet shaderSet = new ShaderSet();
        shaderSet.writeGeometryUniformData(2, null);
        assertEquals(0, shaderSet.getFragmentPushConstantSize());
        assertFalse(shaderSet.isVertexUniformDataDirty());
        assertFalse(shaderSet.isPreSort());
        assertFalse(shaderSet.isGeometryUniformDataDirty());
        assertFalse(shaderSet.isFragmentUniformDataDirty());
        assertTrue(shaderSet.isDepthTest());
        assertFalse(shaderSet.isAlphaBlend());
        assertEquals(0, shaderSet.getVertexUniformDataSize());
        assertEquals(0, shaderSet.getVertexAttributeDescriptions().length);
        assertEquals(1000, shaderSet.getRenderOrder());
        assertEquals(0, shaderSet.getNumFragmentTextures());
        assertEquals(0, shaderSet.getLightCount());
        assertEquals(0, shaderSet.getGeometryUniformDataSize());
        assertEquals(0, shaderSet.getFragmentUniformDataSize());
    }

    @Test
    public void testWriteFragmentUniformData() {
        ShaderSet shaderSet = new ShaderSet();
        shaderSet.writeFragmentUniformData(2, null);
        assertEquals(0, shaderSet.getFragmentPushConstantSize());
        assertFalse(shaderSet.isVertexUniformDataDirty());
        assertFalse(shaderSet.isPreSort());
        assertFalse(shaderSet.isGeometryUniformDataDirty());
        assertFalse(shaderSet.isFragmentUniformDataDirty());
        assertTrue(shaderSet.isDepthTest());
        assertFalse(shaderSet.isAlphaBlend());
        assertEquals(0, shaderSet.getVertexUniformDataSize());
        assertEquals(0, shaderSet.getVertexAttributeDescriptions().length);
        assertEquals(1000, shaderSet.getRenderOrder());
        assertEquals(0, shaderSet.getNumFragmentTextures());
        assertEquals(0, shaderSet.getLightCount());
        assertEquals(0, shaderSet.getGeometryUniformDataSize());
        assertEquals(0, shaderSet.getFragmentUniformDataSize());
    }

    @Test
    public void testNumUniformBindings() {
        assertEquals(0, (new ShaderSet()).numUniformBindings());
    }

    @Test
    public void testFree() {
        ShaderSet shaderSet = new ShaderSet();
        shaderSet.free();
        assertNull(shaderSet.mVertexShader);
        assertNull(shaderSet.mGeometryShader);
        assertNull(shaderSet.mFragmentShader);
    }
}
