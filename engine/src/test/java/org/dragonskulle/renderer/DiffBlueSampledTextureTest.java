/* (C) 2021 DragonSkulle */
package org.dragonskulle.renderer;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;

import org.dragonskulle.core.Resource;
import org.junit.Test;

// The below tests were generated by https://www.diffblue.com/

public class DiffBlueSampledTextureTest {
    @Test
    public void testConstructor() {
        SampledTexture actualSampledTexture = new SampledTexture("Texture Name");
        assertFalse(actualSampledTexture.isLinear());
        assertNull(actualSampledTexture.getTexture());
        TextureMapping mapping = actualSampledTexture.getMapping();
        assertEquals(TextureMapping.TextureWrapping.CLAMP, mapping.mWrapV);
        assertEquals(TextureMapping.TextureWrapping.CLAMP, mapping.mWrapU);
        assertEquals(TextureMapping.TextureFiltering.LINEAR, mapping.mFiltering);
        assertEquals(TextureMapping.TextureWrapping.CLAMP, mapping.mWrapW);
    }

    @Test
    public void testConstructor2() {
        SampledTexture actualSampledTexture =
                new SampledTexture("Texture Name", new TextureMapping());
        assertFalse(actualSampledTexture.isLinear());
        assertNull(actualSampledTexture.getTexture());
        assertEquals(
                TextureMapping.TextureWrapping.CLAMP, actualSampledTexture.getMapping().mWrapV);
    }

    @Test
    public void testConstructor3() {
        SampledTexture actualSampledTexture =
                new SampledTexture("Texture Name", new TextureMapping(), true);
        assertTrue(actualSampledTexture.isLinear());
        assertNull(actualSampledTexture.getTexture());
        assertEquals(
                TextureMapping.TextureWrapping.CLAMP, actualSampledTexture.getMapping().mWrapV);
    }

    @Test
    public void testConstructor4() {
        SampledTexture actualSampledTexture = new SampledTexture("Texture Name", true);
        assertTrue(actualSampledTexture.isLinear());
        assertNull(actualSampledTexture.getTexture());
        TextureMapping mapping = actualSampledTexture.getMapping();
        assertEquals(TextureMapping.TextureWrapping.CLAMP, mapping.mWrapV);
        assertEquals(TextureMapping.TextureWrapping.CLAMP, mapping.mWrapU);
        assertEquals(TextureMapping.TextureFiltering.LINEAR, mapping.mFiltering);
        assertEquals(TextureMapping.TextureWrapping.CLAMP, mapping.mWrapW);
    }

    @Test
    public void testConstructor5() {
        SampledTexture actualSampledTexture = new SampledTexture((Resource<Texture>) null);
        assertFalse(actualSampledTexture.isLinear());
        assertNull(actualSampledTexture.getTexture());
        TextureMapping mapping = actualSampledTexture.getMapping();
        assertEquals(TextureMapping.TextureWrapping.CLAMP, mapping.mWrapV);
        assertEquals(TextureMapping.TextureWrapping.CLAMP, mapping.mWrapU);
        assertEquals(TextureMapping.TextureFiltering.LINEAR, mapping.mFiltering);
        assertEquals(TextureMapping.TextureWrapping.CLAMP, mapping.mWrapW);
    }

    @Test
    public void testClone() {
        SampledTexture actualCloneResult = (new SampledTexture("Texture Name")).clone();
        assertFalse(actualCloneResult.isLinear());
        assertNull(actualCloneResult.getTexture());
        assertEquals(TextureMapping.TextureWrapping.CLAMP, actualCloneResult.getMapping().mWrapV);
    }

    @Test
    public void testFree() {
        SampledTexture sampledTexture = new SampledTexture("Texture Name");
        sampledTexture.free();
        assertFalse(sampledTexture.isLinear());
        assertEquals(TextureMapping.TextureWrapping.CLAMP, sampledTexture.getMapping().mWrapV);
    }

    @Test
    public void testHashCode() {
        assertEquals(3182, (new SampledTexture("Texture Name")).hashCode());
    }

    @Test
    public void testEquals() {
        assertFalse((new SampledTexture("Texture Name")).equals("42"));
        assertFalse((new SampledTexture("Texture Name")).equals(1));
        assertFalse((new SampledTexture("Texture Name", new TextureMapping())).equals(0));
    }

    @Test
    public void testEquals2() {
        SampledTexture sampledTexture =
                new SampledTexture(
                        "Texture Name",
                        new TextureMapping(TextureMapping.TextureFiltering.NEAREST));
        assertFalse(sampledTexture.equals(new SampledTexture("Texture Name")));
    }
}
