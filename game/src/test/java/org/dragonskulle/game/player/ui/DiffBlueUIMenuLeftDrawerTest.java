/* (C) 2021 DragonSkulle */
package org.dragonskulle.game.player.ui;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertSame;
import static org.junit.Assert.assertTrue;

import org.dragonskulle.core.GameObject;
import org.dragonskulle.core.Reference;
import org.junit.Test;

// The below tests were generated by https://www.diffblue.com/

public class DiffBlueUIMenuLeftDrawerTest {
    @Test
    public void testSetHidden() {
        UIMenuLeftDrawer uiMenuLeftDrawer =
                new UIMenuLeftDrawer(null, null, null, null, null, null);
        uiMenuLeftDrawer.setHidden(false);
        assertTrue(uiMenuLeftDrawer.isEnabled());
        assertFalse(uiMenuLeftDrawer.isStarted());
        assertFalse(uiMenuLeftDrawer.isAwake());
    }

    @Test
    public void testConstructor() {
        UIMenuLeftDrawer actualUiMenuLeftDrawer =
                new UIMenuLeftDrawer(null, null, null, null, null, null);
        assertNull(actualUiMenuLeftDrawer.mSetHexChosen);
        assertNull(actualUiMenuLeftDrawer.mSetBuildingChosen);
        assertNull(actualUiMenuLeftDrawer.mNotifyScreenChange);
        assertNull(actualUiMenuLeftDrawer.mGetPlayer);
        assertNull(actualUiMenuLeftDrawer.mGetHexChosen);
        assertNull(actualUiMenuLeftDrawer.mGetBuildingChosen);
        assertTrue(actualUiMenuLeftDrawer.isEnabled());
        assertFalse(actualUiMenuLeftDrawer.isStarted());
        assertFalse(actualUiMenuLeftDrawer.isAwake());
        assertNull(actualUiMenuLeftDrawer.getLastScreen());
        assertNull(actualUiMenuLeftDrawer.getCurrentScreen().get());
        assertSame(actualUiMenuLeftDrawer, actualUiMenuLeftDrawer.getReference().get());
    }

    @Test
    public void testOnDestroy() {
        UIMenuLeftDrawer uiMenuLeftDrawer =
                new UIMenuLeftDrawer(null, null, null, null, null, null);
        uiMenuLeftDrawer.onDestroy();
        assertTrue(uiMenuLeftDrawer.isEnabled());
        assertFalse(uiMenuLeftDrawer.isStarted());
        assertFalse(uiMenuLeftDrawer.isAwake());
    }

    @Test
    public void testSetVisibleScreen() {
        UIMenuLeftDrawer uiMenuLeftDrawer =
                new UIMenuLeftDrawer(null, null, null, null, null, null);
        uiMenuLeftDrawer.setVisibleScreen(Screen.DEFAULT_SCREEN);
        assertEquals(Screen.DEFAULT_SCREEN, uiMenuLeftDrawer.getLastScreen());
        assertNull(uiMenuLeftDrawer.getCurrentScreen().get());
    }

    @Test
    public void testSetVisibleScreen2() {
        UIMenuLeftDrawer uiMenuLeftDrawer =
                new UIMenuLeftDrawer(null, null, null, null, null, null);
        uiMenuLeftDrawer.setVisibleScreen(Screen.BUILDING_SELECTED_SCREEN);
        assertEquals(Screen.BUILDING_SELECTED_SCREEN, uiMenuLeftDrawer.getLastScreen());
        assertNull(uiMenuLeftDrawer.getCurrentScreen().get());
    }

    @Test
    public void testSetVisibleScreen3() {
        UIMenuLeftDrawer uiMenuLeftDrawer =
                new UIMenuLeftDrawer(null, null, null, null, null, null);
        uiMenuLeftDrawer.setVisibleScreen(Screen.ATTACKING_SCREEN);
        assertEquals(Screen.ATTACKING_SCREEN, uiMenuLeftDrawer.getLastScreen());
        assertNull(uiMenuLeftDrawer.getCurrentScreen().get());
    }

    @Test
    public void testSetVisibleScreen4() {
        UIMenuLeftDrawer uiMenuLeftDrawer =
                new UIMenuLeftDrawer(null, null, null, null, null, null);
        uiMenuLeftDrawer.setVisibleScreen(Screen.SELLING_SCREEN);
        assertEquals(Screen.SELLING_SCREEN, uiMenuLeftDrawer.getLastScreen());
        assertNull(uiMenuLeftDrawer.getCurrentScreen().get());
    }

    @Test
    public void testSetVisibleScreen5() {
        UIMenuLeftDrawer uiMenuLeftDrawer =
                new UIMenuLeftDrawer(null, null, null, null, null, null);
        uiMenuLeftDrawer.setCurrentScreen(new Reference<GameObject>(new GameObject("Name")));
        uiMenuLeftDrawer.setVisibleScreen(Screen.DEFAULT_SCREEN);
        assertEquals(Screen.DEFAULT_SCREEN, uiMenuLeftDrawer.getLastScreen());
        assertNull(uiMenuLeftDrawer.getCurrentScreen().get());
    }

    @Test
    public void testSetVisibleScreen7() {
        UIMenuLeftDrawer uiMenuLeftDrawer =
                new UIMenuLeftDrawer(null, null, null, null, null, null);
        uiMenuLeftDrawer.setVisibleScreen(Screen.PLACING_NEW_BUILDING);
        assertEquals(Screen.PLACING_NEW_BUILDING, uiMenuLeftDrawer.getLastScreen());
        assertNull(uiMenuLeftDrawer.getCurrentScreen().get());
    }
}
