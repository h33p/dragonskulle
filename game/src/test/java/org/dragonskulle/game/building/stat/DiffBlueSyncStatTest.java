/* (C) 2021 DragonSkulle */
package org.dragonskulle.game.building.stat;

import static org.junit.Assert.assertEquals;

import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import org.dragonskulle.game.building.Building;
import org.junit.Test;

// The below tests were generated by https://www.diffblue.com/

public class DiffBlueSyncStatTest {
    @Test
    public void testInitialise() {
        SyncStat syncStat = new SyncStat(new Building());
        syncStat.initialise(StatType.ATTACK);
        assertEquals(1, syncStat.getValue());
        assertEquals(StatType.ATTACK, syncStat.getType());
    }

    @Test
    public void testIncreaseLevel() {
        SyncStat syncStat = new SyncStat(new Building());
        syncStat.increaseLevel();
        assertEquals(2, syncStat.get());
    }

    @Test
    public void testIncreaseLevel2() {
        SyncStat syncStat = new SyncStat(new Building());
        syncStat.add(42);
        syncStat.increaseLevel();
        assertEquals(SyncStat.LEVEL_MAX, syncStat.get());
    }

    @Test
    public void testIncreaseLevel3() {
        SyncStat syncStat = new SyncStat(new Building());
        syncStat.add(-1);
        syncStat.increaseLevel();
        assertEquals(1, syncStat.get());
    }

    @Test
    public void testDecreaseLevel() {
        SyncStat syncStat = new SyncStat(new Building());
        syncStat.decreaseLevel();
        assertEquals(0, syncStat.get());
    }

    @Test
    public void testDecreaseLevel2() {
        SyncStat syncStat = new SyncStat(new Building());
        syncStat.add(42);
        syncStat.decreaseLevel();
        assertEquals(SyncStat.LEVEL_MAX, syncStat.get());
    }

    @Test
    public void testDecreaseLevel3() {
        SyncStat syncStat = new SyncStat(new Building());
        syncStat.add(-1);
        syncStat.decreaseLevel();
        assertEquals(1, syncStat.get());
    }

    @Test
    public void testSetLevel() {
        SyncStat syncStat = new SyncStat(new Building());
        syncStat.setLevel(1);
        assertEquals(1, syncStat.get());
    }

    @Test
    public void testSetLevel2() {
        SyncStat syncStat = new SyncStat(new Building());
        syncStat.add(42);
        syncStat.setLevel(1);
        assertEquals(SyncStat.LEVEL_MAX, syncStat.get());
    }

    @Test
    public void testSetLevel3() {
        SyncStat syncStat = new SyncStat(new Building());
        syncStat.add(-1);
        syncStat.setLevel(1);
        assertEquals(1, syncStat.get());
    }

    @Test
    public void testDeserialize() throws IOException {
        Building building = new Building();
        building.setCapital(true);
        SyncStat syncStat = new SyncStat(building);
        syncStat.deserialize(
                new DataInputStream(
                        new ByteArrayInputStream("AAAAAAAAAAAAAAAAAAAAAAAA".getBytes("UTF-8"))));
        assertEquals(1094795585, syncStat.get());
        assertEquals(-1010580540, syncStat.getCost());
    }
}
